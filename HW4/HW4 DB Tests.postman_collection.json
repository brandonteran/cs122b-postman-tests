{
	"info": {
		"_postman_id": "894e147f-d749-4167-a73c-29b586bb33bc",
		"name": "HW4 DB Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Shopping Cart DB Test",
			"item": [
				{
					"name": "Retrieve - Item Not Exist (Case 312) - Before Insert",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(312);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping item does not exist\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/retrieve",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"retrieve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert - Success (Case 3100)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3100);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping cart item inserted successfully\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\",\r\n   \"movieId\": \"tt0308514\",\r\n   \"quantity\": 1\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/insert",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"insert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert - Duplicate (Case 311) - After Insert Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(311);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Duplicate insertion\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\",\r\n   \"movieId\": \"tt0308514\",\r\n   \"quantity\": 1\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/insert",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"insert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update - Success (Case 3110)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3110);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping cart item updated successfully\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\",\r\n   \"movieId\": \"tt0308514\",\r\n   \"quantity\": 5\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/update",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve - Success (Case 3130) - After Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3130);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping cart retrieved successfully\");\r",
									"    \r",
									"    pm.expect(jsonData.items).not.eql(null);\r",
									"    pm.expect(jsonData.items[0]).not.eql(null);\r",
									"    pm.expect(jsonData.items[0].email).not.eql(null);\r",
									"    pm.expect(jsonData.items[0].email).to.contain(\"adah.glen.232@facebook.com\");\r",
									"    pm.expect(jsonData.items[0].movieId).not.eql(null);\r",
									"    pm.expect(jsonData.items[0].movieId).to.contain(\"tt0308514\");\r",
									"    pm.expect(jsonData.items[0].quantity).not.eql(null);\r",
									"    pm.expect(jsonData.items[0].quantity).to.eql(5);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/retrieve",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"retrieve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete - Success (Case 3120)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3120);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping cart item deleted successfully\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\",\r\n   \"movieId\": \"tt0308514\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/delete",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve - Item Not Exist (Case 312) - After Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(312);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping item does not exist\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/retrieve",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"retrieve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert - Success (Case 3100) - For Clear Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3100);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping cart item inserted successfully\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\",\r\n   \"movieId\": \"tt0308514\",\r\n   \"quantity\": 1\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/insert",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"insert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clear - Success (Case 3140)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3140);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping cart cleared successfully\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/clear",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"clear"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update - Item Not Exist (Case 312) - After Clear",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(312);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping item does not exist\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\",\r\n   \"movieId\": \"tt0308514\",\r\n   \"quantity\": 5\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/update",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert - Quantity Invalid (Case 33) - [0]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(33);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Quantity has invalid value\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\",\r\n   \"movieId\": \"tt0308514\",\r\n   \"quantity\": 0\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/insert",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"insert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert - Quantity Invalid (Case 33) - [-1]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(33);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Quantity has invalid value\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\",\r\n   \"movieId\": \"tt0308514\",\r\n   \"quantity\": -1\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/insert",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"insert"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Credit Card DB Test",
			"item": [
				{
					"name": "Insert - Success (Case 3200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3200);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Credit card inserted successfully\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"9876543210987654321\",\r\n    \"firstName\": \"Credit Card First Name\",\r\n    \"lastName\": \"Credit Card Last Name\",\r\n    \"expiration\": \"2022-02-02\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/card/insert",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"card",
								"insert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update - Invalid Expiration value (Case 323)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(323);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"expiration has invalid value\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"9876543210987654321\",\r\n    \"firstName\": \"Credit Card First Name\",\r\n    \"lastName\": \"Credit Card Last Name\",\r\n    \"expiration\": \"2000-12-31\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/card/update",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"card",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve - Success (Case 3230) - After Insert",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3230);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Credit card retrieved successfully\");\r",
									"    \r",
									"    \r",
									"    pm.expect(jsonData.creditcard).not.eql(null);\r",
									"    pm.expect(jsonData.creditcard.id).not.eql(null);\r",
									"    pm.expect(jsonData.creditcard.id).to.contain(\"9876543210987654321\");\r",
									"    pm.expect(jsonData.creditcard.firstName).not.eql(null);\r",
									"    pm.expect(jsonData.creditcard.firstName).to.contain(\"Credit Card First Name\");\r",
									"    pm.expect(jsonData.creditcard.lastName).not.eql(null);\r",
									"    pm.expect(jsonData.creditcard.lastName).to.contain(\"Credit Card Last Name\");\r",
									"    pm.expect(jsonData.creditcard.expiration).not.eql(null);\r",
									"    pm.expect(jsonData.creditcard.expiration).to.eql(1643673600000);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"9876543210987654321\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/card/retrieve",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"card",
								"retrieve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert - Duplicate (Case 325) - After Insert",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(325);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Duplicate insertion\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"9876543210987654321\",\r\n    \"firstName\": \"Duplicate Credit Card First Name\",\r\n    \"lastName\": \"Duplicate Credit Card Last Name\",\r\n    \"expiration\": \"2022-02-02\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/card/insert",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"card",
								"insert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update - Success (Case 3210)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3210);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Credit card updated successfully\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"9876543210987654321\",\r\n    \"firstName\": \"Updated Credit Card First Name\",\r\n    \"lastName\": \"Updated Credit Card Last Name\",\r\n    \"expiration\": \"2022-02-02\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/card/update",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"card",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve - Success (Case 3230) - After Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3230);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Credit card retrieved successfully\");\r",
									"    \r",
									"    pm.expect(jsonData.creditcard).not.eql(null);\r",
									"    pm.expect(jsonData.creditcard.id).not.eql(null);\r",
									"    pm.expect(jsonData.creditcard.id).to.contain(\"9876543210987654321\");\r",
									"    pm.expect(jsonData.creditcard.firstName).not.eql(null);\r",
									"    pm.expect(jsonData.creditcard.firstName).to.contain(\"Updated Credit Card First Name\");\r",
									"    pm.expect(jsonData.creditcard.lastName).not.eql(null);\r",
									"    pm.expect(jsonData.creditcard.lastName).to.contain(\"Updated Credit Card Last Name\");\r",
									"    pm.expect(jsonData.creditcard.expiration).not.eql(null);\r",
									"    pm.expect(jsonData.creditcard.expiration).to.eql(1643673600000);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"9876543210987654321\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/card/retrieve",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"card",
								"retrieve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete - Success (Case 3220)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3220);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Credit card deleted successfully\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"9876543210987654321\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/card/delete",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"card",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve - Credit Card Not Exist (Case 322) - After Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(324);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Credit card does not exist\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"0123456789123456789\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/card/retrieve",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"card",
								"retrieve"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer DB Test",
			"item": [
				{
					"name": "Insert - Success (Case 3300)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3300);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Customer inserted successfully\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"newCustomer@uci.edu\",\r\n    \"firstName\": \"Customer First Name\",\r\n    \"lastName\": \"Customer Last Name\",\r\n    \"ccId\": \"9900028611992862486\",\r\n    \"address\": \"1234, Campus Dr., Irvine, CA, 92697\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/customer/insert",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"customer",
								"insert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert - Duplicate Insertion (Case 333)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(333);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Duplicate insertion\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"newCustomer@uci.edu\",\r\n    \"firstName\": \"customer First Name\",\r\n    \"lastName\": \"customer Last Name\",\r\n    \"ccId\": \"9900028611992862486\",\r\n    \"address\": \"1234, Campus Dr., Irvine, CA, 92697\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/customer/insert",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"customer",
								"insert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve - Success (Case 3330) - After Insert",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3320);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Customer retrieved successfully\");\r",
									"    \r",
									"    \r",
									"    pm.expect(jsonData.customer).not.eql(null);\r",
									"    pm.expect(jsonData.customer.email).not.eql(null);\r",
									"    pm.expect(jsonData.customer.email).to.contain(\"newCustomer@uci.edu\");\r",
									"    pm.expect(jsonData.customer.firstName).not.eql(null);\r",
									"    pm.expect(jsonData.customer.firstName).to.contain(\"Customer First Name\");\r",
									"    pm.expect(jsonData.customer.lastName).not.eql(null);\r",
									"    pm.expect(jsonData.customer.lastName).to.contain(\"Customer Last Name\");\r",
									"    pm.expect(jsonData.customer.ccId).not.eql(null);\r",
									"    pm.expect(jsonData.customer.ccId).to.contain(\"9900028611992862486\");\r",
									"    pm.expect(jsonData.customer.address).not.eql(null);\r",
									"    pm.expect(jsonData.customer.address).to.eql(\"1234, Campus Dr., Irvine, CA, 92697\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"newCustomer@uci.edu\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/customer/retrieve",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"customer",
								"retrieve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert - Duplicate (Case 333) - After Insert",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(333);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Duplicate insertion\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"newCustomer@uci.edu\",\r\n    \"firstName\": \"Duplicate Customer First Name\",\r\n    \"lastName\": \"Duplicate Customer Last Name\",\r\n    \"ccId\": \"9900028611992862486\",\r\n    \"address\": \"1234, Campus Dr., Irvine, CA, 92697\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/customer/insert",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"customer",
								"insert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update - Success (Case 3310)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3310);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Customer updated successfully\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"newCustomer@uci.edu\",\r\n    \"firstName\": \"Updated Customer First Name\",\r\n    \"lastName\": \"Updated Customer Last Name\",\r\n    \"ccId\": \"9900028611992862486\",\r\n    \"address\": \"1234, Campus Dr., Irvine, CA, 92697\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/customer/update",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"customer",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve - Success (Case 3230) - After Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3320);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Customer retrieved successfully\");\r",
									"    \r",
									"    \r",
									"    pm.expect(jsonData.customer).not.eql(null);\r",
									"    pm.expect(jsonData.customer.email).not.eql(null);\r",
									"    pm.expect(jsonData.customer.email).to.contain(\"newCustomer@uci.edu\");\r",
									"    pm.expect(jsonData.customer.firstName).not.eql(null);\r",
									"    pm.expect(jsonData.customer.firstName).to.contain(\"Customer First Name\");\r",
									"    pm.expect(jsonData.customer.lastName).not.eql(null);\r",
									"    pm.expect(jsonData.customer.lastName).to.contain(\"Customer Last Name\");\r",
									"    pm.expect(jsonData.customer.ccId).not.eql(null);\r",
									"    pm.expect(jsonData.customer.ccId).to.contain(\"9900028611992862486\");\r",
									"    pm.expect(jsonData.customer.address).not.eql(null);\r",
									"    pm.expect(jsonData.customer.address).to.eql(\"1234, Campus Dr., Irvine, CA, 92697\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"newCustomer@uci.edu\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/customer/retrieve",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"customer",
								"retrieve"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Order DB Test",
			"item": [
				{
					"name": "Place - Cart Not Found (Case 341)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(341);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping cart for this customer not found\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/order/place",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"order",
								"place"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Shopping Cart] Insert - Success (Case 3100)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3100);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping cart item inserted successfully\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\",\r\n   \"movieId\": \"tt0308514\",\r\n   \"quantity\": 1\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/insert",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"insert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place - Success (Case 3400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3400);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Order placed successfully\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/order/place",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"order",
								"place"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place - Cart Not Found (Case 341) - After Place",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(341);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping cart for this customer not found\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/order/place",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"order",
								"place"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Shopping Cart Retrieve] - Item Not Exist (Case 312) - After Place",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(312);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Shopping item does not exist\");\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/cart/retrieve",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"cart",
								"retrieve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve - Success (Case 3410)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc025ea-2005-4656-b499-7ba963edf7ef",
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a body in json format\", () => {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains an message\", () => {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.resultCode).eql(3410);\r",
									"\r",
									"    pm.expect(jsonData.message).not.eql(null);\r",
									"    pm.expect(jsonData.message).to.contain(\"Orders retrieved successfully\");\r",
									"    \r",
									"    pm.expect(jsonData.items).not.eql(null);\r",
									"    pm.expect(jsonData.items[0]).not.eql(null);\r",
									"    pm.expect(jsonData.items[0].email).not.eql(null);\r",
									"    pm.expect(jsonData.items[0].email).to.contain(\"adah.glen.232@facebook.com\");\r",
									"    pm.expect(jsonData.items[0].movieId).not.eql(null);\r",
									"    pm.expect(jsonData.items[0].movieId).to.contain(\"tt0308514\");\r",
									"    pm.expect(jsonData.items[0].quantity).not.eql(null);\r",
									"    pm.expect(jsonData.items[0].quantity).to.eql(1);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"email\": \"adah.glen.232@facebook.com\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/billing/order/retrieve",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"billing",
								"order",
								"retrieve"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}